/**
 * generated by Xtext 2.10.0
 */
package org.emn.fil.boto.botoLang.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.emn.fil.boto.botoLang.BotoLangFactory;
import org.emn.fil.boto.botoLang.BotoLangPackage;
import org.emn.fil.boto.botoLang.Browser;
import org.emn.fil.boto.botoLang.Check;
import org.emn.fil.boto.botoLang.Click;
import org.emn.fil.boto.botoLang.Fill;
import org.emn.fil.boto.botoLang.Function;
import org.emn.fil.boto.botoLang.FunctionCall;
import org.emn.fil.boto.botoLang.Goto;
import org.emn.fil.boto.botoLang.Html;
import org.emn.fil.boto.botoLang.InstructionList;
import org.emn.fil.boto.botoLang.Model;
import org.emn.fil.boto.botoLang.Predicate;
import org.emn.fil.boto.botoLang.Put;
import org.emn.fil.boto.botoLang.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BotoLangFactoryImpl extends EFactoryImpl implements BotoLangFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BotoLangFactory init()
  {
    try
    {
      BotoLangFactory theBotoLangFactory = (BotoLangFactory)EPackage.Registry.INSTANCE.getEFactory(BotoLangPackage.eNS_URI);
      if (theBotoLangFactory != null)
      {
        return theBotoLangFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BotoLangFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BotoLangFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BotoLangPackage.MODEL: return createModel();
      case BotoLangPackage.BROWSER: return createBrowser();
      case BotoLangPackage.INSTRUCTION_LIST: return createInstructionList();
      case BotoLangPackage.GOTO: return createGoto();
      case BotoLangPackage.CLICK: return createClick();
      case BotoLangPackage.FILL: return createFill();
      case BotoLangPackage.CHECK: return createCheck();
      case BotoLangPackage.PREDICATE: return createPredicate();
      case BotoLangPackage.PUT: return createPut();
      case BotoLangPackage.VARIABLE: return createVariable();
      case BotoLangPackage.OBJECT: return createObject();
      case BotoLangPackage.HTML: return createHtml();
      case BotoLangPackage.FUNCTION: return createFunction();
      case BotoLangPackage.FUNCTION_CALL: return createFunctionCall();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Browser createBrowser()
  {
    BrowserImpl browser = new BrowserImpl();
    return browser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InstructionList createInstructionList()
  {
    InstructionListImpl instructionList = new InstructionListImpl();
    return instructionList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Goto createGoto()
  {
    GotoImpl goto_ = new GotoImpl();
    return goto_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Click createClick()
  {
    ClickImpl click = new ClickImpl();
    return click;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fill createFill()
  {
    FillImpl fill = new FillImpl();
    return fill;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Check createCheck()
  {
    CheckImpl check = new CheckImpl();
    return check;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Predicate createPredicate()
  {
    PredicateImpl predicate = new PredicateImpl();
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Put createPut()
  {
    PutImpl put = new PutImpl();
    return put;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.emn.fil.boto.botoLang.Object createObject()
  {
    ObjectImpl object = new ObjectImpl();
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Html createHtml()
  {
    HtmlImpl html = new HtmlImpl();
    return html;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCall createFunctionCall()
  {
    FunctionCallImpl functionCall = new FunctionCallImpl();
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BotoLangPackage getBotoLangPackage()
  {
    return (BotoLangPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BotoLangPackage getPackage()
  {
    return BotoLangPackage.eINSTANCE;
  }

} //BotoLangFactoryImpl
