/*
 * generated by Xtext 2.10.0
 */
package org.emn.fil.boto.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.emn.fil.boto.ide.contentassist.antlr.internal.InternalBotoLangParser;
import org.emn.fil.boto.services.BotoLangGrammarAccess;

public class BotoLangParser extends AbstractContentAssistParser {

	@Inject
	private BotoLangGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalBotoLangParser createParser() {
		InternalBotoLangParser result = new InternalBotoLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getInstructionListAccess().getInstructionsAlternatives_0_0(), "rule__InstructionList__InstructionsAlternatives_0_0");
					put(grammarAccess.getPredicateAccess().getAlternatives(), "rule__Predicate__Alternatives");
					put(grammarAccess.getPredicateAccess().getAlternatives_0_2(), "rule__Predicate__Alternatives_0_2");
					put(grammarAccess.getPredicateAccess().getSecondKeywordAlternatives_1_1_0(), "rule__Predicate__SecondKeywordAlternatives_1_1_0");
					put(grammarAccess.getPutAccess().getAlternatives_1(), "rule__Put__Alternatives_1");
					put(grammarAccess.getObjectAccess().getAlternatives(), "rule__Object__Alternatives");
					put(grammarAccess.getHtmlAccess().getTagAlternatives_0(), "rule__Html__TagAlternatives_0");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getBrowserAccess().getGroup(), "rule__Browser__Group__0");
					put(grammarAccess.getInstructionListAccess().getGroup(), "rule__InstructionList__Group__0");
					put(grammarAccess.getGotoAccess().getGroup(), "rule__Goto__Group__0");
					put(grammarAccess.getClickAccess().getGroup(), "rule__Click__Group__0");
					put(grammarAccess.getFillAccess().getGroup(), "rule__Fill__Group__0");
					put(grammarAccess.getCheckAccess().getGroup(), "rule__Check__Group__0");
					put(grammarAccess.getPredicateAccess().getGroup_0(), "rule__Predicate__Group_0__0");
					put(grammarAccess.getPredicateAccess().getGroup_1(), "rule__Predicate__Group_1__0");
					put(grammarAccess.getPutAccess().getGroup(), "rule__Put__Group__0");
					put(grammarAccess.getObjectAccess().getGroup_0(), "rule__Object__Group_0__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_3(), "rule__Function__Group_3__0");
					put(grammarAccess.getFunctionAccess().getGroup_3_0(), "rule__Function__Group_3_0__0");
					put(grammarAccess.getFunctionAccess().getGroup_3_0_1(), "rule__Function__Group_3_0_1__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2(), "rule__FunctionCall__Group_2__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2_1(), "rule__FunctionCall__Group_2_1__0");
					put(grammarAccess.getModelAccess().getFunctionsAssignment_0(), "rule__Model__FunctionsAssignment_0");
					put(grammarAccess.getModelAccess().getBrowsersAssignment_1(), "rule__Model__BrowsersAssignment_1");
					put(grammarAccess.getBrowserAccess().getNameAssignment_1(), "rule__Browser__NameAssignment_1");
					put(grammarAccess.getBrowserAccess().getInstructionsAssignment_3(), "rule__Browser__InstructionsAssignment_3");
					put(grammarAccess.getInstructionListAccess().getInstructionsAssignment_0(), "rule__InstructionList__InstructionsAssignment_0");
					put(grammarAccess.getGotoAccess().getUrlAssignment_1(), "rule__Goto__UrlAssignment_1");
					put(grammarAccess.getClickAccess().getObjectAssignment_1(), "rule__Click__ObjectAssignment_1");
					put(grammarAccess.getFillAccess().getObjectAssignment_1(), "rule__Fill__ObjectAssignment_1");
					put(grammarAccess.getFillAccess().getValueAssignment_3(), "rule__Fill__ValueAssignment_3");
					put(grammarAccess.getCheckAccess().getObjectAssignment_1(), "rule__Check__ObjectAssignment_1");
					put(grammarAccess.getCheckAccess().getPredicateAssignment_2(), "rule__Check__PredicateAssignment_2");
					put(grammarAccess.getPredicateAccess().getKeywordAssignment_0_0(), "rule__Predicate__KeywordAssignment_0_0");
					put(grammarAccess.getPredicateAccess().getNotAssignment_0_1(), "rule__Predicate__NotAssignment_0_1");
					put(grammarAccess.getPredicateAccess().getStringValueAssignment_0_2_0(), "rule__Predicate__StringValueAssignment_0_2_0");
					put(grammarAccess.getPredicateAccess().getVariableAssignment_0_2_1(), "rule__Predicate__VariableAssignment_0_2_1");
					put(grammarAccess.getPredicateAccess().getKeywordAssignment_1_0(), "rule__Predicate__KeywordAssignment_1_0");
					put(grammarAccess.getPredicateAccess().getSecondKeywordAssignment_1_1(), "rule__Predicate__SecondKeywordAssignment_1_1");
					put(grammarAccess.getPredicateAccess().getValueAssignment_1_2(), "rule__Predicate__ValueAssignment_1_2");
					put(grammarAccess.getPutAccess().getObjectAssignment_1_0(), "rule__Put__ObjectAssignment_1_0");
					put(grammarAccess.getPutAccess().getStringAssignment_1_1(), "rule__Put__StringAssignment_1_1");
					put(grammarAccess.getPutAccess().getVariableAssignment_3(), "rule__Put__VariableAssignment_3");
					put(grammarAccess.getVariableAccess().getNameAssignment(), "rule__Variable__NameAssignment");
					put(grammarAccess.getObjectAccess().getHtmlAssignment_0_0(), "rule__Object__HtmlAssignment_0_0");
					put(grammarAccess.getObjectAccess().getParamAssignment_0_1(), "rule__Object__ParamAssignment_0_1");
					put(grammarAccess.getObjectAccess().getVariableAssignment_1(), "rule__Object__VariableAssignment_1");
					put(grammarAccess.getHtmlAccess().getTagAssignment(), "rule__Html__TagAssignment");
					put(grammarAccess.getFunctionAccess().getNameAssignment_1(), "rule__Function__NameAssignment_1");
					put(grammarAccess.getFunctionAccess().getVariablesAssignment_3_0_0(), "rule__Function__VariablesAssignment_3_0_0");
					put(grammarAccess.getFunctionAccess().getVariablesAssignment_3_0_1_1(), "rule__Function__VariablesAssignment_3_0_1_1");
					put(grammarAccess.getFunctionAccess().getInstructionsAssignment_3_3(), "rule__Function__InstructionsAssignment_3_3");
					put(grammarAccess.getFunctionCallAccess().getNameAssignment_0(), "rule__FunctionCall__NameAssignment_0");
					put(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_0(), "rule__FunctionCall__VariablesAssignment_2_0");
					put(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_1_1(), "rule__FunctionCall__VariablesAssignment_2_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalBotoLangParser typedParser = (InternalBotoLangParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BotoLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BotoLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
